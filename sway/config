# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

font pango:SF-Pro-Display-Regular 12


# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
# swaylock -f -i lock.png -c 000000 -s center --indicator-radius 130
set $lock swaylock -C ~/.config/sway/swaylock
bindsym $mod+Shift+x exec $lock

exec swayidle -w \
         timeout 300 '$lock' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep '$lock'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    
    set $ws1 "1: "
    set $ws2 "2: "
    set $ws3 "3: Code "
    set $ws4 "4:"
    set $ws5 "5:"
    set $ws6 "6:"
    set $ws7 "7:"
    set $ws8 "8:"
    set $ws9 "9:"
    set $ws10 "10: "

    #permanent workspaces
    assign [class="Firefox"] $ws1
    assign [class="Code"] $ws3
    assign [class="jetbrains-idea"] $ws3
    assign [class="java-lang-Thread"] $ws3
    assign [class="Spotify"] $ws10

    for_window [class=".*"] border pixel 0
    for_window [class="Spotify"] move to workspace $ws10
    for_window [class="Gcolor3"] floating enable
    for_window [class="jetbrains-idea" title="win0"] floating enable;
    for_window [class="jetbrains-toolbox"] floating enable;

    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10

    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# exit, reboot or shutdown sway
mode "exit: [l]ogout, [r]eboot, [s]hutdown" {
    bindsym l exec i3-msg exit
    bindsym r exec systemctl reboot
    bindsym s exec systemctl poweroff
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym $mod+shift+e mode "exit: [l]ogout, [r]eboot, [s]hutdown"

# Window config

output * bg ~/Pictures/wallpaper/grayscale_lake.jpg fill
gaps inner 10
smart_gaps on
default_border none

# color declarations
set $bg 	         #2f343f
set $bord_color          #787878
set $inactive_bg         #2f343f
set $text_color          #f3f4f5
set $inactive_text_color #676E7D
set $urgent_bg_color     #E53935


# assigning window colors
#                       border            background            text                    indicator
client.focused          $bg               $bord_color           $text_color             #000000
client.unfocused        $inactive_bg      $inactive_bg          $inactive_text_color    #000000
client.focused_inactive $inactive_bg      $inactive_bg          $inactive_text_color    #000000
client.urgent           $urgent_bg_color  $urgent_bg_color      $text_color             #000000

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# color declarations
set $bg_bar             #111111aa 
set $active_bg_bar      #FFAB0F
set $inactive_bg_bar    #444444aa 
set $text_color_bar     #000000
set $inactive_text_bar  #676e7d
set $urgent_bg_bar      #E53935dd

bar {
    font pango:DejaVu Sans Mono, FontAwesome 13
    position bottom

    status_command i3status-rs ~/.config/sway/statusrust.toml


    colors {
        statusline #ffffff
        background $bg_bar
        separator #757575
		#                  border               background      text
		focused_workspace  $active_bg_bar       $active_bg_bar  $text_color_bar
		inactive_workspace $bg_bar              $bg_bar         $inactive_text_bar
		urgent_workspace   $urgent_bg_bar       $urgent_bg_bar  $text_color_bar
    }
}

# Function buttons
## Sreen brightness controls: sudo chmod u+s /usr/bin/brightnessctl
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set 1%+ # increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 1%- # decrease screen brightness

## Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +1% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -1% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# To change Caps to AltGr open /usr/share/X11/xkb/symbols and edit the file "pc"
# Own keybindings
bindsym $mod+F1 exec "i3-msg -t run_command workspace 1: ; firefox"
bindsym $mod+F2 exec "i3-msg -t run_command workspace 2: ; $term"
bindsym $mod+F3 exec "i3-msg -t run_command workspace 3: Code ; code"

# Startup configs
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & eval $(gnome-keyring-daemon -s --components=pkcs11,secrets,ssh,gpg) &
exec --no-startup-id udiskie -a -s -F
exec swaymsg input 1386:18452:Wacom_HID_4814_Finger events disabled

exec pactl set-sink-volume 0 20%
exec pactl set-sink-mute 0 1 

include /etc/sway/config.d/*
